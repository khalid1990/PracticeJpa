<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd ">

    <context:component-scan base-package="com.babar.web.question.controller,
                                        com.babar.web.question.helper, com.babar.web.user.controller, com.babar.web.user.helper"/>

    <!--
        why am I using com.babar.web.user.controller and com.babar.web.user.helper separately rather than combining them into
        a simple base package com.babar.web.user; because there is another package named "service" under com.babar.web.user
        which will also be scanned under the commmon base package; and this servlet (question-servlet) doesn't add transactional
        features to @Repository annotated classes and @Transactional annotated methods. So if "service" package was also
        annotated with common base package declaration the entityManagers declared inside the service classes under the service package
        will not get any transaction present at the time of persisting or merging.

        If I use <tx:annotation-driven> declaration here then it solves the problem, that means I can use the common base package
        com.babar.web.user, the presence of the aforementioned tag will enable the @Repository and @Transactional and so
        Persistence context will find a Transaction
    -->

    <!--
        TODO: need to know the mechanism of this before using it
        <mvc:interceptors>
            <mvc:interceptor>
                <mvc:mapping path="/**"/>
                <bean class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor"/>
            </mvc:interceptor>
        </mvc:interceptors>
    -->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/jsp/question/"/>
        <property name="suffix" value=".jsp" />
    </bean>

    <mvc:resources mapping="/resources/**" location="/resources/" />

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="sessionAttributeStore">
            <bean class="com.babar.common.CommonSessionAttributeStore"/>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
</beans>
